generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id             String    @id @default(cuid())
  name           String?   @unique
  email          String?   @unique
  image          String?
  isVerified     Boolean?  @default(false)
  password       String?
  token          String?
  expirationTime DateTime?
  emailVerified  DateTime?
  accounts       Account[]
  sessions       Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Plg {
  id          String    @id @default(cuid())
  plgId       String?   @unique
  username    String?
  recieveDate DateTime?
  email       String?
  result      Json?
}

model tokens {
  id            String    @id @default(cuid())
  plgToken      String?   @unique
  plgExpireDate DateTime?
  tokenType     String?   @unique
  expired       String?
  issued        String?
}
model Literature {
  id          String    @id @default(cuid())
  username    String?   
  email   String?      
  project String?   @unique
  saveDate DateTime?
  title       String?  
  content      String?
  style        String?
}
model Article {
  id          String    @id @default(cuid())
  username    String?
  email   String?   
  project String?   @unique      
  saveDate DateTime?
  title       String?  
  content      String?
  style        String?
  outline      String?
}
model Outline {
  id          String    @id @default(cuid())
  username    String?
  email   String?
  project String?   @unique
  saveDate DateTime?
  title       String?  
  content      String?
}
model Reflist {
  id          String    @id @default(cuid()) 
  project String?   @unique
  username    String?
  email   String?
  saveDate DateTime?
  style     String?
  list      String?
}
model Ref {
  id          String    @id @default(cuid())
  username    String?
  email   String?
  recieveDate DateTime?
  link     String?
  title     String?
  style     String?
  authors   String?
  year      String?
  citation  String?
}

model Document {
  id          String    @id @default(cuid())
  username    String?
  email   String?
  recieveDate DateTime?
  link     String?
  name     String?
  type      String?
  status    String?
  total_pages Int?
}